{"version":3,"file":"addon-entry-disable-stage-drag-select.index.js","sources":["webpack:///./node_modules/scratch-gui/src/addons/addons/disable-stage-drag-select/_runtime_entry.js","webpack:///./node_modules/scratch-gui/src/addons/addons/disable-stage-drag-select/userscript.js"],"sourcesContent":["/* generated by pull.js */\nimport _js from \"./userscript.js\";\nexport const resources = {\n  \"userscript.js\": _js\n};","export default async _ref => {\n  let {\n    addon,\n    console\n  } = _ref;\n  const vm = addon.tab.traps.vm;\n  let shiftKeyPressed = false;\n  document.addEventListener(\"mousedown\", function (e) {\n    shiftKeyPressed = e.shiftKey;\n  }, {\n    capture: true\n  });\n\n  // Do not focus sprite after dragging it\n  const oldStopDrag = vm.stopDrag;\n  vm.stopDrag = function () {\n    const allowDrag = shiftKeyPressed || addon.settings.get(\"drag_while_stopped\") && !addon.tab.redux.state.scratchGui.vmStatus.running;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (allowDrag || addon.self.disabled) return oldStopDrag.call(this, ...args);\n    const setEditingTarget = this.setEditingTarget;\n    this.setEditingTarget = () => {};\n    const r = oldStopDrag.call(this, ...args);\n    this.setEditingTarget = setEditingTarget;\n    return r;\n  };\n\n  // Don't let the editor drag sprites that aren't marked as draggable\n  const oldGetTargetIdForDrawableId = vm.getTargetIdForDrawableId;\n  vm.getTargetIdForDrawableId = function () {\n    const allowDrag = shiftKeyPressed || addon.settings.get(\"drag_while_stopped\") && !addon.tab.redux.state.scratchGui.vmStatus.running;\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    const targetId = oldGetTargetIdForDrawableId.call(this, ...args);\n    if (allowDrag || addon.self.disabled) return targetId;\n    if (targetId !== null) {\n      const target = this.runtime.getTargetById(targetId);\n      if (target && !target.draggable) {\n        return null;\n      }\n    }\n    return targetId;\n  };\n};"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}