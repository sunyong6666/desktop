{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{1549:function(t,e,s){\"use strict\";s.r(e),s.d(e,\"resources\",(function(){return n}));const n={\"userscript.js\":async function(t){let{addon:e}=t;const s=e.tab.traps.vm,n=s.constructor.prototype.addSprite;s.constructor.prototype.addSprite=function(t){var s;let r,c=!0;\"object\"==typeof t?[r,c]=[t,!1]:r=JSON.parse(t);const i=\"cd21514d0531fdffb22204e0ec5ed84a.svg\"===(null===(s=r.costumes)||void 0===s||null===(s=s[0])||void 0===s?void 0:s.baseLayerMD5);return e.self.disabled||!i&&r.tags&&e.settings.get(\"library\")||(r.scratchX&&(r.scratchX=e.settings.get(\"x\"),r.scratchY=e.settings.get(\"y\")),r.x&&(r.x=e.settings.get(\"x\"),r.y=e.settings.get(\"y\"))),n.call(this,c?JSON.stringify(r):r)};const r=()=>{const t=s.runtime.getTargetForStage().constructor.prototype,n=t.duplicate;t.duplicate=function(){return n.call(this).then((t=>{if(!e.self.disabled)switch(e.settings.get(\"duplicate\")){case\"custom\":t.setXY(e.settings.get(\"x\"),e.settings.get(\"y\"));break;case\"keep\":t.setXY(this.x,this.y)}return t}))}};s.runtime.getTargetForStage()?r():s.runtime.once(\"PROJECT_LOADED\",r)}}}}]);","name":"30.index.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[30],{\n\n/***/ 1549:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"resources\", function() { return /* binding */ resources; });\n\n// CONCATENATED MODULE: ./node_modules/scratch-gui/src/addons/addons/initialise-sprite-position/userscript.js\n/* harmony default export */ var userscript = (async function (_ref) {\n  let {\n    addon\n  } = _ref;\n  const vm = addon.tab.traps.vm;\n  const oldAddSprite = vm.constructor.prototype.addSprite;\n  vm.constructor.prototype.addSprite = function (input) {\n    var _spriteObj$costumes;\n    let spriteObj,\n      stringify = true;\n    if (typeof input === \"object\") [spriteObj, stringify] = [input, false];else spriteObj = JSON.parse(input);\n    const isEmpty = ((_spriteObj$costumes = spriteObj.costumes) === null || _spriteObj$costumes === void 0 || (_spriteObj$costumes = _spriteObj$costumes[0]) === null || _spriteObj$costumes === void 0 ? void 0 : _spriteObj$costumes.baseLayerMD5) === \"cd21514d0531fdffb22204e0ec5ed84a.svg\";\n    if (!addon.self.disabled && (isEmpty || !spriteObj.tags || !addon.settings.get(\"library\"))) {\n      if (spriteObj.scratchX) {\n        spriteObj.scratchX = addon.settings.get(\"x\");\n        spriteObj.scratchY = addon.settings.get(\"y\");\n      }\n      if (spriteObj.x) {\n        spriteObj.x = addon.settings.get(\"x\");\n        spriteObj.y = addon.settings.get(\"y\");\n      }\n    }\n    return oldAddSprite.call(this, stringify ? JSON.stringify(spriteObj) : spriteObj);\n  };\n  const registerDupPrototype = () => {\n    const targetPrototype = vm.runtime.getTargetForStage().constructor.prototype;\n    const oldDuplicate = targetPrototype.duplicate;\n    targetPrototype.duplicate = function () {\n      return oldDuplicate.call(this).then(newSprite => {\n        if (!addon.self.disabled) {\n          switch (addon.settings.get(\"duplicate\")) {\n            case \"custom\":\n              newSprite.setXY(addon.settings.get(\"x\"), addon.settings.get(\"y\"));\n              break;\n            case \"keep\":\n              newSprite.setXY(this.x, this.y);\n          }\n        }\n        return newSprite;\n      });\n    };\n  };\n  if (vm.runtime.getTargetForStage()) {\n    registerDupPrototype();\n  } else {\n    vm.runtime.once(\"PROJECT_LOADED\", registerDupPrototype);\n  }\n});\n// CONCATENATED MODULE: ./node_modules/scratch-gui/src/addons/addons/initialise-sprite-position/_runtime_entry.js\n/* generated by pull.js */\n\nconst resources = {\n  \"userscript.js\": userscript\n};\n\n/***/ })\n\n}]);","inputSourceMap":null}