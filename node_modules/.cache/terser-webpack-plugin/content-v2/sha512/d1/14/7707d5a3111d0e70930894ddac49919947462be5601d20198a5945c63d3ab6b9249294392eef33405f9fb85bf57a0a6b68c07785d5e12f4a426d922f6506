{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{1400:function(e,t,r){\"use strict\";function n(e,t,r){const n=r.Events.isEnabled();if(r.Events.disable(),t){e.editingTarget&&e.emitWorkspaceUpdate();const r=t.getFlyout();if(r){const e=r.getWorkspace();window.Blockly.Xml.clearWorkspaceAndLoadFromXml(window.Blockly.Xml.workspaceToDom(e),e),t.getToolbox().refreshSelection(),t.toolboxRefreshEnabled_=!0}}n&&r.Events.enable()}r.d(t,\"a\",(function(){return n}))},1577:function(e,t,r){\"use strict\";r.r(t),r.d(t,\"resources\",(function(){return s}));var n=r(1400);function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t,r){return(t=function(e){var t=function(e,t){if(\"object\"!=typeof e||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==typeof t?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const s={\"userscript.js\":async function(e){let{addon:t}=e;const r=await t.tab.traps.getBlockly(),o=t.tab.traps.vm,c={text:\"text\",argument_editor_string_number:\"text\",math_number:\"number\",math_integer:\"number\",math_whole_number:\"number\",math_positive_number:\"number\",math_angle:\"number\",note:\"number\",colour_picker:\"color\"},s=r.BlockSvg.prototype.jsonInit;function a(){Object(n.a)(o,t.tab.traps.getWorkspace(),r)}r.BlockSvg.prototype.jsonInit=function(e){!t.self.disabled&&c[this.type]&&t.settings.get(c[this.type])?s.call(this,i(i({},e),{},{outputShape:r.OUTPUT_SHAPE_SQUARE})):s.call(this,e)},t.self.addEventListener(\"disabled\",a),t.self.addEventListener(\"reenabled\",a),t.settings.addEventListener(\"change\",a),a()}}}}]);","name":"21.index.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[21],{\n\n/***/ 1400:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return updateAllBlocks; });\nfunction updateAllBlocks(vm, workspace, blockly) {\n  const eventsOriginallyEnabled = blockly.Events.isEnabled();\n  blockly.Events.disable(); // Clears workspace right-clickâ†’undo (see SA/SA#6691)\n\n  if (workspace) {\n    if (vm.editingTarget) {\n      vm.emitWorkspaceUpdate();\n    }\n    const flyout = workspace.getFlyout();\n    if (flyout) {\n      const flyoutWorkspace = flyout.getWorkspace();\n      window.Blockly.Xml.clearWorkspaceAndLoadFromXml(window.Blockly.Xml.workspaceToDom(flyoutWorkspace), flyoutWorkspace);\n      workspace.getToolbox().refreshSelection();\n      workspace.toolboxRefreshEnabled_ = true;\n    }\n  }\n\n  // There's no particular reason for checking whether events were originally enabled.\n  // Unconditionally enabling events at this point could, in theory, cause bugs in the future.\n  if (eventsOriginallyEnabled) blockly.Events.enable(); // Re-enable events\n}\n\n/***/ }),\n\n/***/ 1577:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"resources\", function() { return /* binding */ resources; });\n\n// EXTERNAL MODULE: ./node_modules/scratch-gui/src/addons/addons/custom-block-shape/update-all-blocks.js\nvar update_all_blocks = __webpack_require__(1400);\n\n// CONCATENATED MODULE: ./node_modules/scratch-gui/src/addons/addons/editor-square-inputs/userscript.js\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n/* harmony default export */ var userscript = (async function (_ref) {\n  let {\n    addon\n  } = _ref;\n  const ScratchBlocks = await addon.tab.traps.getBlockly();\n  const vm = addon.tab.traps.vm;\n  const opcodeToSettings = {\n    text: \"text\",\n    argument_editor_string_number: \"text\",\n    math_number: \"number\",\n    math_integer: \"number\",\n    math_whole_number: \"number\",\n    math_positive_number: \"number\",\n    math_angle: \"number\",\n    note: \"number\",\n    colour_picker: \"color\"\n  };\n  const originalJsonInit = ScratchBlocks.BlockSvg.prototype.jsonInit;\n  ScratchBlocks.BlockSvg.prototype.jsonInit = function (json) {\n    if (!addon.self.disabled && opcodeToSettings[this.type] && addon.settings.get(opcodeToSettings[this.type])) {\n      originalJsonInit.call(this, _objectSpread(_objectSpread({}, json), {}, {\n        outputShape: ScratchBlocks.OUTPUT_SHAPE_SQUARE\n      }));\n    } else {\n      originalJsonInit.call(this, json);\n    }\n  };\n  function update() {\n    Object(update_all_blocks[\"a\" /* updateAllBlocks */])(vm, addon.tab.traps.getWorkspace(), ScratchBlocks);\n  }\n  addon.self.addEventListener(\"disabled\", update);\n  addon.self.addEventListener(\"reenabled\", update);\n  addon.settings.addEventListener(\"change\", update);\n  update();\n});\n// CONCATENATED MODULE: ./node_modules/scratch-gui/src/addons/addons/editor-square-inputs/_runtime_entry.js\n/* generated by pull.js */\n\nconst resources = {\n  \"userscript.js\": userscript\n};\n\n/***/ })\n\n}]);","inputSourceMap":null}