import React, { useState, useEffect, useRef} from 'react';

// 串口监视器内容
const SerialMonitor = ({ serialData }) => {
    const scrollRef = useRef(null);
  
    // 每次数据变化后自动滚动到底部
    useEffect(() => {
      if (scrollRef.current) {
        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;
      }
    }, [serialData]);
  
      // 💡 统一格式处理：把字符串转为数组
    const displayData = Array.isArray(serialData)
    ? serialData
    : typeof serialData === 'string'
    ? serialData.split('\n') // 按行切割
    : [];
    return (
      <div style={{}}>
        {/* <h4>串口监视器</h4> */}
        <div
          ref={scrollRef}
          style={{
            backgroundColor: '#000',
            color: '#0f0',
            height:'115px',
            overflowY: 'auto',
            fontFamily: 'monospace',
            borderRadius: '5px',
          }}
        >
          {displayData && displayData.length > 0 ? (
            displayData.map((line, index) => (
              <div key={index}>{line}</div>
            ))
          ) : (
            <div style={{ color: '#666' }}>暂无串口数据</div>
          )}
        </div>
      </div>
    );
  };

// 程序下载界面
const ProgramDownload = () => {
  return (
    <div style={{ padding: '10px' }}>
      <div style={{ marginBottom: '10px' }}>
        <label>程序名称：</label>
        <input type="text" defaultValue="baoweijiayuan" />
      </div>
      <div style={{ marginBottom: '10px' }}>
        <label>程序存储位置：</label>
        <select>
          <option value="P1">P1</option>
          <option value="P2">P2</option>
          <option value="P3">P3</option>
        </select>
      </div>
      <button style={{ marginRight: '10px' }}>下载程序</button>
      <button>下载并运行</button>
    </div>
  );
};

// 主组件：切换 Tabs
const TabSwitcher = ({ serialData }) => {
  const [activeTab, setActiveTab] = useState('download');

  return (
    <div style={{ width: '100%', height:'40vh',background: '#98F5FF', padding: '1px', borderRadius: '8px' }}>
      {/* Tabs */}
      <div style={{ display: 'flex', marginBottom: '1px' }}>
        <div
          onClick={() => setActiveTab('download')}
          style={{
            padding: '10px 20px',
            backgroundColor: activeTab === 'download' ? '#00F5FF' : '#AEEEEE',
            cursor: 'pointer',
            borderTopLeftRadius: '8px',  
            borderTopRightRadius: '8px',
            fontWeight: 'bold',
          }}
        >
          程序下载
        </div>
        <div
          onClick={() => setActiveTab('monitor')}
          style={{
            padding: '10px 20px',
            backgroundColor: activeTab === 'monitor' ? '#00F5FF' : '#AEEEEE',
            cursor: 'pointer',
            borderTopLeftRadius: '8px',
            borderTopRightRadius: '8px',
            fontWeight: 'bold',
          }}
        >
          串口监视器
        </div>
      </div>

      {/* Tab 内容区域 */}
      <div style={{ backgroundColor: '#eee', padding: '20px', borderRadius: '0 0 8px 8px' }}>
        {activeTab === 'download' ? <ProgramDownload /> : <SerialMonitor serialData={serialData} />}
      </div>
    </div>
  );
};

export default TabSwitcher;
