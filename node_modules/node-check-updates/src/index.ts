#!/usr/bin/env node

import { parseDependencies } from "./dependencyParser";
import { displayUpdates } from "./displayUpdates";
import { findCompatibleVersion } from "./npmWrapper";
import { getValidSemverVersion } from "./util";

async function checkUpdates() {
  try {
    // Parse dependencies from package.json
    const dependencies = await parseDependencies();

    // Iterate through dependencies
    for (const dependency of dependencies) {
      // Check for updates for each dependency
      const version = getValidSemverVersion(dependency.version);

      if (!version) {
        throw new Error("Invalid version found in package.json");
      }

      const latestCompatibleVersion = await findCompatibleVersion(
        dependency.name,
        version,
        dependencies
      );

      displayUpdates(
        dependency.name,
        dependency.version,
        latestCompatibleVersion
      );
    }
  } catch (error: any) {
    console.error("Error:", error.message);
    process.exit(1); // Exit with a non-zero exit code
  }
}

checkUpdates();
