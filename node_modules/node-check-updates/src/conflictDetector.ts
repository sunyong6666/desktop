import { Dependency } from "./types"; // Assuming Dependency type is defined in './types'
import semver from "semver";

function detectConflict(dep1: string, dep2: string): boolean {
  // Check if dep1 and dep2 are valid semver ranges
  if (!semver.validRange(dep1) || !semver.validRange(dep2)) {
    throw new Error("Invalid semver range");
  }

  // Check if dep1 and dep2 intersect
  const intersection = semver.intersects(dep1, dep2);

  // If intersection is false, then dep1 and dep2 conflict
  return !intersection;
}

export function hasPeerDependencyConflicts(
  ourDeps: Dependency[],
  theirDeps: Dependency[]
): boolean {
  // Iterate through their dependencies
  for (const theirDep of theirDeps) {
    // Check if our dependencies contain their dependency
    const ourDep = ourDeps.find((dep) => dep.name === theirDep.name);
    if (ourDep) {
      // Check for conflicts
      const conflict = detectConflict(ourDep.version, theirDep.version);
      if (conflict) {
        return true;
      }
    }
  }
  return false;
}
